"use strict";(self.webpackChunkkitra_doc=self.webpackChunkkitra_doc||[]).push([[4282],{1406:(n,e,t)=>{t.r(e),t.d(e,{assets:()=>s,contentTitle:()=>a,default:()=>h,frontMatter:()=>r,metadata:()=>p,toc:()=>d});var i=t(5893),o=t(1151);const r={sidebar_position:3},a="Typography",p={id:"doc/Typography",title:"Typography",description:"Applying typography",source:"@site/docs/doc/Typography.md",sourceDirName:"doc",slug:"/doc/Typography",permalink:"/react-native-kitra/docs/next/doc/Typography",draft:!1,unlisted:!1,editUrl:"https://github.com/TRA-Tech/react-native-kitra/tree/main/doc/docs/doc/Typography.md",tags:[],version:"current",lastUpdatedAt:1713789580,formattedLastUpdatedAt:"Apr 22, 2024",sidebarPosition:3,frontMatter:{sidebar_position:3},sidebar:"DocSidebar",previous:{title:"Theme",permalink:"/react-native-kitra/docs/next/doc/Theme"}},s={},d=[{value:"Applying typography",id:"applying-typography",level:2},{value:"Accessing and updating typography",id:"accessing-and-updating-typography",level:2}];function l(n){const e={code:"code",h1:"h1",h2:"h2",p:"p",pre:"pre",strong:"strong",...(0,o.a)(),...n.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(e.h1,{id:"typography",children:"Typography"}),"\n",(0,i.jsx)(e.h2,{id:"applying-typography",children:"Applying typography"}),"\n",(0,i.jsx)(e.p,{children:"To use typography, you need to wrap the root component with provider."}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-jsx",children:"import { KitraProvider } from '@tra-tech/react-native-kitra';\nimport App from './src/App';\n\nexport default function Main() {\n  return (\n    <KitraProvider>\n      <App />\n    </KitraProvider>\n  );\n}\n"})}),"\n",(0,i.jsx)(e.h2,{id:"accessing-and-updating-typography",children:"Accessing and updating typography"}),"\n",(0,i.jsx)(e.p,{children:"Once you've wrapped your app with the provider, you can access the typography styles using the useTypography hook."}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-js",children:"import { useTypography } from 'react';\n\nconst myTypography= {\n            heading: {\n                h1: {\n                    fontSize: 15,\n                    lineHeight: 30,\n                    fontFamily: 'poppins-medium',\n                }\n            },\n            body: {\n                regular: {\n                    fontSize: 10,\n                    lineHeight: 12,\n                    fontFamily: 'medium',\n                },\n                otherTypo: {\n                    fontSize: 12,\n                    lineHeight: 16,\n                }\n            },\n            otherTypo: {\n                fontSize: 12,\n                lineHeight: 16,\n            }\n        }\n\nfunction MyComponent() {\n  const { typography, updateTypography } = useTypography();\n\n    useEffect(() => {\n      updateTypography(myTypography)\n    }, []);\n  return (\n    <View>\n     <Text style={{ typography.body.regular }}>\n        This text is styled with the regular body font style.\n     </Text>\n    </View>\n  );\n}\n"})}),"\n",(0,i.jsx)(e.p,{children:(0,i.jsx)(e.strong,{children:"Heading:"})}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-js",children:" heading: {\n    h1: {\n      fontSize: 30,\n      lineHeight: 45,\n      fontFamily: 'medium',\n    },\n    h2: {\n      fontSize: 28,\n      lineHeight: 42,\n      fontFamily: 'medium',\n    },\n    h3: {\n      fontSize: 23,\n      lineHeight: 35,\n      fontFamily: 'medium',\n    },\n    h4: {\n      fontSize: 19,\n      lineHeight: 29,\n      fontFamily: 'medium',\n    },\n    h5: {\n      fontSize: 16,\n      lineHeight: 25,\n      fontFamily: 'medium',\n    },\n  },\n"})}),"\n",(0,i.jsx)(e.p,{children:(0,i.jsx)(e.strong,{children:"Body:"})}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-js",children:" body: {\n    regular: {\n      fontSize: 14,\n      lineHeight: 16,\n      fontFamily: 'regular',\n    },\n    sregular: {\n      fontSize: 12,\n      lineHeight: 16,\n      fontFamily: 'regular',\n    },\n    xsregular: {\n      fontSize: 10,\n      lineHeight: 14,\n      fontFamily: 'regular',\n    },\n    xxsregular: {\n      fontSize: 8,\n      lineHeight: 12,\n      fontFamily: 'regular',\n    },\n    medium: {\n      fontSize: 14,\n      lineHeight: 21,\n      fontFamily: 'medium',\n    },\n    smedium: {\n      fontSize: 12,\n      lineHeight: 18,\n      fontFamily: 'medium',\n    },\n    xsmedium: {\n      fontSize: 10,\n      lineHeight: 16,\n      fontFamily: 'medium',\n    },\n    xxsmedium: {\n      fontSize: 8,\n      lineHeight: 12,\n      fontFamily: 'medium',\n    },\n  },\n\n"})})]})}function h(n={}){const{wrapper:e}={...(0,o.a)(),...n.components};return e?(0,i.jsx)(e,{...n,children:(0,i.jsx)(l,{...n})}):l(n)}},1151:(n,e,t)=>{t.d(e,{Z:()=>p,a:()=>a});var i=t(7294);const o={},r=i.createContext(o);function a(n){const e=i.useContext(r);return i.useMemo((function(){return"function"==typeof n?n(e):{...e,...n}}),[e,n])}function p(n){let e;return e=n.disableParentContext?"function"==typeof n.components?n.components(o):n.components||o:a(n.components),i.createElement(r.Provider,{value:e},n.children)}}}]);