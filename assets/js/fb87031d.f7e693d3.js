"use strict";(self.webpackChunkkitra_doc=self.webpackChunkkitra_doc||[]).push([[8975],{4109:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>c,contentTitle:()=>d,default:()=>h,frontMatter:()=>r,metadata:()=>i,toc:()=>a});var s=n(5893),o=n(1151);const r={sidebar_position:12},d="Modal",i={id:"components/modal",title:"Modal",description:"The Modal component is a basic way to present content above an enclosing view.",source:"@site/docs/components/modal.md",sourceDirName:"components",slug:"/components/modal",permalink:"/react-native-kitra/docs/next/components/modal",draft:!1,unlisted:!1,editUrl:"https://github.com/TRA-Tech/react-native-kitra/tree/main/doc/docs/components/modal.md",tags:[],version:"current",lastUpdatedAt:1711106915,formattedLastUpdatedAt:"Mar 22, 2024",sidebarPosition:12,frontMatter:{sidebar_position:12},sidebar:"ComponentsSidebar",previous:{title:"Menu",permalink:"/react-native-kitra/docs/next/components/menu"},next:{title:"Pagerview",permalink:"/react-native-kitra/docs/next/components/pagerview"}},c={},a=[{value:"Import",id:"import",level:3},{value:"Usage",id:"usage",level:3},{value:"Props",id:"props",level:3}];function l(e){const t={a:"a",code:"code",h1:"h1",h3:"h3",p:"p",pre:"pre",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",...(0,o.a)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(t.h1,{id:"modal",children:"Modal"}),"\n",(0,s.jsxs)(t.p,{children:["The ",(0,s.jsx)(t.strong,{children:"Modal"})," component is a basic way to present content above an enclosing view."]}),"\n",(0,s.jsx)(t.h3,{id:"import",children:"Import"}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-js",children:"import { Modal } from '@tra-tech/react-native-kitra';\n"})}),"\n",(0,s.jsx)(t.h3,{id:"usage",children:"Usage"}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-js",children:"import { Modal } from '@tra-tech/react-native-kitra';\nimport { useState } from 'react';\nimport { Text, TouchableOpacity, View } from 'react-native';\n\nconst App = () => {\n\n  const [visible, setVisible] = useState(false);\n  \n  return (\n    <>\n      <View style={{ alignItems: 'center' }}>\n        <TouchableOpacity onPress={() => setVisible(true)}>\n          <Text>Show Modal</Text>\n        </TouchableOpacity>\n      </View>\n      <Modal visible={visible} modalStyle={{ width: '100%', height: '100%', backgroundColor: '#D7D1E9', alignItems: 'center', justifyContent: 'center' }}>\n        <TouchableOpacity onPress={() => setVisible(false)}>\n          <Text>Hide Modal</Text>\n        </TouchableOpacity>\n      </Modal>\n    </>\n  );\n};\n\nexport default App;\n"})}),"\n",(0,s.jsx)(t.h3,{id:"props",children:"Props"}),"\n",(0,s.jsxs)(t.table,{children:[(0,s.jsx)(t.thead,{children:(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.th,{children:"Prop name"}),(0,s.jsx)(t.th,{children:"Type"}),(0,s.jsx)(t.th,{children:"Required"}),(0,s.jsx)(t.th,{children:"Description"})]})}),(0,s.jsxs)(t.tbody,{children:[(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"containerStyle"}),(0,s.jsx)(t.td,{children:(0,s.jsx)(t.a,{href:"https://reactnative.dev/docs/view-style-props",children:(0,s.jsx)(t.code,{children:"StyleProp<ViewStyle>"})})}),(0,s.jsx)(t.td,{children:"No"}),(0,s.jsx)(t.td,{children:"Additional styles to apply to the modal container."})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"modalStyle"}),(0,s.jsx)(t.td,{children:(0,s.jsx)(t.a,{href:"https://reactnative.dev/docs/text-style-props",children:(0,s.jsx)(t.code,{children:"StyleProp<ViewStyle>"})})}),(0,s.jsx)(t.td,{children:"No"}),(0,s.jsx)(t.td,{children:"Additional styles to apply to the modal component."})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"visible"}),(0,s.jsx)(t.td,{children:(0,s.jsx)(t.code,{children:"boolean"})}),(0,s.jsx)(t.td,{children:"No"}),(0,s.jsxs)(t.td,{children:["Visibility status.  Default value: ",(0,s.jsx)(t.code,{children:"false"})]})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"children"}),(0,s.jsx)(t.td,{children:(0,s.jsx)(t.a,{href:"https://reactnative.dev/docs/react-node",children:(0,s.jsx)(t.code,{children:"React.ReactNode"})})}),(0,s.jsx)(t.td,{children:"No"}),(0,s.jsx)(t.td,{children:"Content of the modal."})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"...ModalProps"}),(0,s.jsx)(t.td,{children:(0,s.jsx)(t.a,{href:"https://reactnative.dev/docs/modal#props",children:(0,s.jsx)(t.code,{children:"ModalProps"})})}),(0,s.jsx)(t.td,{children:"No"}),(0,s.jsx)(t.td,{children:"React native modal props."})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"theme"}),(0,s.jsx)(t.td,{children:(0,s.jsx)(t.code,{children:"UITheme "})}),(0,s.jsx)(t.td,{children:"No"}),(0,s.jsx)(t.td,{children:"The theme to use for the component."})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"typography"}),(0,s.jsx)(t.td,{children:(0,s.jsx)(t.code,{children:"UITypography"})}),(0,s.jsx)(t.td,{children:"No"}),(0,s.jsx)(t.td,{children:"The typography to use for the component."})]})]})]})]})}function h(e={}){const{wrapper:t}={...(0,o.a)(),...e.components};return t?(0,s.jsx)(t,{...e,children:(0,s.jsx)(l,{...e})}):l(e)}},1151:(e,t,n)=>{n.d(t,{Z:()=>i,a:()=>d});var s=n(7294);const o={},r=s.createContext(o);function d(e){const t=s.useContext(r);return s.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function i(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(o):e.components||o:d(e.components),s.createElement(r.Provider,{value:t},e.children)}}}]);