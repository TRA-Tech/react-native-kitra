"use strict";(self.webpackChunkkitra_doc=self.webpackChunkkitra_doc||[]).push([[1473],{2099:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>c,contentTitle:()=>d,default:()=>h,frontMatter:()=>s,metadata:()=>o,toc:()=>l});var r=n(5893),i=n(1151);const s={sidebar_position:14},d="Pagerview",o={id:"components/pagerview",title:"Pagerview",description:'The PagerView component is that is designed to create a tab-based view with a sliding indicator on top of it.  It uses the "react-native-pager-view" library to handle animations.',source:"@site/docs/components/pagerview.md",sourceDirName:"components",slug:"/components/pagerview",permalink:"/react-native-kitra/docs/next/components/pagerview",draft:!1,unlisted:!1,editUrl:"https://github.com/TRA-Tech/react-native-kitra/tree/main/doc/docs/components/pagerview.md",tags:[],version:"current",lastUpdatedAt:1715943650,formattedLastUpdatedAt:"May 17, 2024",sidebarPosition:14,frontMatter:{sidebar_position:14},sidebar:"ComponentsSidebar",previous:{title:"Menu",permalink:"/react-native-kitra/docs/next/components/menu"},next:{title:"Progress Bar",permalink:"/react-native-kitra/docs/next/components/progress-bar"}},c={},l=[{value:"Import",id:"import",level:3},{value:"Usage",id:"usage",level:3},{value:"Props",id:"props",level:3}];function a(e){const t={a:"a",code:"code",h1:"h1",h3:"h3",p:"p",pre:"pre",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",...(0,i.a)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(t.h1,{id:"pagerview",children:"Pagerview"}),"\n",(0,r.jsxs)(t.p,{children:["The ",(0,r.jsx)(t.strong,{children:"PagerView"}),' component is that is designed to create a tab-based view with a sliding indicator on top of it.  It uses the "react-native-pager-view" library to handle animations.']}),"\n",(0,r.jsx)(t.h3,{id:"import",children:"Import"}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-js",children:"import { PagerView } from '@tra-tech/react-native-kitra';\n \n"})}),"\n",(0,r.jsx)(t.h3,{id:"usage",children:"Usage"}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-js",children:"import { PagerView } from '@tra-tech/react-native-kitra';\n\nimport { Text, View, StyleSheet } from 'react-native';\n\nconst App = () => (\n  <View style={{  flex: 1 }}>\n    <PagerView containerStyle={{ marginTop: 10 }} >\n      <View key=\"React\" style={style.itemContainer}>\n        <Text>Pager</Text>\n      </View>\n      <View key=\"Native\" style={style.itemContainer}>\n        <Text>View</Text>\n      </View>\n      <View key=\"Kitra\" style={style.itemContainer}>\n        <Text>Component</Text>\n      </View>\n    </PagerView>\n  </View>\n);\n\nconst style = StyleSheet.create({\n  itemContainer: { flex: 1, alignItems: 'center', justifyContent: 'center' },\n});\n\nexport default App;\n \n"})}),"\n",(0,r.jsx)(t.h3,{id:"props",children:"Props"}),"\n",(0,r.jsxs)(t.table,{children:[(0,r.jsx)(t.thead,{children:(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.th,{children:"Prop name"}),(0,r.jsx)(t.th,{children:"Type"}),(0,r.jsx)(t.th,{children:"Required"}),(0,r.jsx)(t.th,{children:"Description"})]})}),(0,r.jsxs)(t.tbody,{children:[(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:"children"}),(0,r.jsx)(t.td,{children:(0,r.jsx)(t.a,{href:"https://reactnative.dev/docs/react-node",children:(0,r.jsx)(t.code,{children:"React.ReactNode"})})}),(0,r.jsx)(t.td,{children:"Yes"}),(0,r.jsx)(t.td,{children:"A required prop that represents the content to display within the PagerView component."})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:"containerStyle"}),(0,r.jsx)(t.td,{children:(0,r.jsx)(t.a,{href:"https://reactnative.dev/docs/view-style-props",children:(0,r.jsx)(t.code,{children:"StyleProp<ViewStyle>"})})}),(0,r.jsx)(t.td,{children:"No"}),(0,r.jsx)(t.td,{children:"Additional styles to apply to the pager view container."})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:"pageContainerStyle"}),(0,r.jsx)(t.td,{children:(0,r.jsx)(t.a,{href:"https://reactnative.dev/docs/view-style-props",children:(0,r.jsx)(t.code,{children:"StyleProp<ViewStyle>"})})}),(0,r.jsx)(t.td,{children:"No"}),(0,r.jsx)(t.td,{children:"Additional styles to apply to the page container."})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:"headerSliderStyle"}),(0,r.jsx)(t.td,{children:(0,r.jsx)(t.a,{href:"https://reactnative.dev/docs/view-style-props",children:(0,r.jsx)(t.code,{children:"StyleProp<ViewStyle>"})})}),(0,r.jsx)(t.td,{children:"No"}),(0,r.jsx)(t.td,{children:"Style of header slider."})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:"headerContainerStyle"}),(0,r.jsx)(t.td,{children:(0,r.jsx)(t.a,{href:"https://reactnative.dev/docs/view-style-props",children:(0,r.jsx)(t.code,{children:"StyleProp<ViewStyle>"})})}),(0,r.jsx)(t.td,{children:"No"}),(0,r.jsx)(t.td,{children:"Style of header slider container."})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:"headerLabelStyle"}),(0,r.jsx)(t.td,{children:(0,r.jsx)(t.a,{href:"https://reactnative.dev/docs/text-style-props",children:(0,r.jsx)(t.code,{children:"StyleProp<TextStyle>"})})}),(0,r.jsx)(t.td,{children:"No"}),(0,r.jsx)(t.td,{children:"Text style of header text."})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:"injectPagerRef"}),(0,r.jsx)(t.td,{children:(0,r.jsx)(t.code,{children:"boolean"})}),(0,r.jsx)(t.td,{children:"No"}),(0,r.jsxs)(t.td,{children:["An optional boolean prop that determines whether to inject the PagerView reference into each child component's props. Default value: ",(0,r.jsx)(t.code,{children:"false"})]})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:"showDivider"}),(0,r.jsx)(t.td,{children:(0,r.jsx)(t.code,{children:"boolean"})}),(0,r.jsx)(t.td,{children:"No"}),(0,r.jsxs)(t.td,{children:["Determines whether the divider is shown or not. Default value:",(0,r.jsx)(t.code,{children:"true"})]})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:"dividerStyle"}),(0,r.jsx)(t.td,{children:(0,r.jsx)(t.a,{href:"https://reactnative.dev/docs/view-style-props",children:(0,r.jsx)(t.code,{children:"StyleProp<ViewStyle>"})})}),(0,r.jsx)(t.td,{children:"No"}),(0,r.jsx)(t.td,{children:"Style of divider"})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:"dividerColor"}),(0,r.jsx)(t.td,{children:(0,r.jsx)(t.code,{children:"string"})}),(0,r.jsx)(t.td,{children:"No"}),(0,r.jsx)(t.td,{children:"Color of divider"})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:"icons"}),(0,r.jsxs)(t.td,{children:[(0,r.jsx)(t.code,{children:"React.ReactElement<typeof "}),"    ",(0,r.jsx)(t.a,{href:"http://localhost:3000/docs/components/icon",children:(0,r.jsx)(t.code,{children:"Icon>"})})," []"]}),(0,r.jsx)(t.td,{children:"No"}),(0,r.jsx)(t.td,{children:"Icon list for header texts."})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:"theme"}),(0,r.jsx)(t.td,{children:(0,r.jsx)(t.code,{children:"UITheme "})}),(0,r.jsx)(t.td,{children:"No"}),(0,r.jsx)(t.td,{children:"The theme to use for the component."})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:"typography"}),(0,r.jsx)(t.td,{children:(0,r.jsx)(t.code,{children:"UITypography"})}),(0,r.jsx)(t.td,{children:"No"}),(0,r.jsx)(t.td,{children:"The typography to use for the component."})]})]})]})]})}function h(e={}){const{wrapper:t}={...(0,i.a)(),...e.components};return t?(0,r.jsx)(t,{...e,children:(0,r.jsx)(a,{...e})}):a(e)}},1151:(e,t,n)=>{n.d(t,{Z:()=>o,a:()=>d});var r=n(7294);const i={},s=r.createContext(i);function d(e){const t=r.useContext(s);return r.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function o(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:d(e.components),r.createElement(s.Provider,{value:t},e.children)}}}]);